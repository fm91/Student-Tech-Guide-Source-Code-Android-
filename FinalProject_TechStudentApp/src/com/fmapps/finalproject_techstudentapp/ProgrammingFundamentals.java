package com.fmapps.finalproject_techstudentapp;




import android.app.ListActivity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.ListView;


public class ProgrammingFundamentals extends ListActivity {
	Intent i;
	final int result = 1;
	
	
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		ListView listView = getListView();
		listView.setBackgroundResource(R.drawable.background);
		
		 //contentText = (TextView)findViewById(R.id.txtContent);
		
		i = new Intent(this,CourseContent.class);
		
		String [] chapterList = {"Chapter 1-4", "Chapter 4-8", 
				"Chapter 8-11"}; 
		/* future updates:
		"Networking Fundamentals", "Web Programming I", "C++ Programming I", "System Administration (Windows)", 
		"Introduction to Systems Analysis and Design", "Web Programming II", "System Administration (Linux)", 
		"C++ Programming II", "Database Design", "Advanced Single LAN Concept", "Graphic User Interface", 
		"Computer Security", "Object Oriented Programming in Java", "XML Data Representation", "Object Oriented Programming",
		"Design of Distributed Databases", "Interconnectivity", "Distributed Application Processing", "Network Security",
		"Advanced Object Oriented Programming in Java", "Web Services", "Data Warehousing", "Software Development Methodologies", 
		"LAN Internet Connection", "ClientServer Technology", "Installing and Maintaining Web Servers", "Advanced Security Technology", 
		"Dynamic Web Development: Servlets and JSP", "Database Administration"*/

		setListAdapter(new ArrayAdapter<String>(this,
				R.layout.listview,R.id.travel, chapterList));
		
		
	}

	protected void onListItemClick(ListView l, View v, int position, long id){
		
		switch(position){
		
		case 0:   // CH1-4
			i.putExtra("stringkey","What will the println statement in the following program segment display? \nint x = 5; \nSystem. out. println( x++); 5\n\uE041\uE042\uE012\nWhat will the println statement in the following program segment display?\nint x = 5; \nSystem. out. println(++ x); 6\n\uE041\uE042\uE012\nWhat is each repetition of a loop known as? Iteration\n\uE041\uE042\uE012\nIn the expression number++ , the ++ operator is in what mode? Postfix\n\uE041\uE042\uE012\nThis is a variable that controls the number of iterations performed by a loop. Loop Control Variable\n\uE041\uE042\uE012\nThe while loop is this type of loop. Pretest\n\uE041\uE042\uE012\nThe do - while loop is this type of loop. Posttest\n\uE041\uE042\uE012\nThe for loop is this type of loop. Pretest\n\uE041\uE042\uE012\nThis type of loop has no way of ending and repeats until the program is interrupted. Infinite\n\uE041\uE042\uE012\nThis type of loop always executes at least once. do-while Loop\n\uE041\uE042\uE012\nThis expression is executed by the for loop only once, regardless of the number of iterations. initialization expression\n\uE041\uE042\uE012\nThis is a variable that keeps a running total. Accumulator\n\uE041\uE042\uE012\nThis is a special value that signals when there are no more items from a list of items to be processed. This value cannot be mistaken as an item from the list. sentinel\n\uE041\uE042\uE012\nTo open a file for writing, you use the following class. PrintWriter\n\uE041\uE042\uE012\nTo open a file for reading, you use the following classes. File and Scanner\n\uE041\uE042\uE012\nWhen a program is finished using a file, it should do this. close the file\n\uE041\uE042\uE012\nThis class allows you to use the print and println methods to write data to a file. PrintWriter\n\uE041\uE042\uE012\nThis class allows you to read a line from a file. Scanner\n\uE041\uE042\uE012\nThe if statement is an example of a __________. Decision structure\n\uE041\uE042\uE012\nThis type of expression has a value of either true or false . Boolean expression\n\uE041\uE042\uE012\n> , < , and == are __________. relational operator\n\uE041\uE042\uE012\n&& , || , and ! are __________. logical operator\n\uE041\uE042\uE012\nThis is an empty statement that does nothing. a null statement\n\uE041\uE042\uE012\nTo create a block of statements, you enclose the statements in these. Braces\n\uE041\uE042\uE012\nThis is a boolean variable that signals when some condition exists in the program. Flag\n\uE041\uE042\uE012\nHow does the character ' A' compare to the character ' B'? A is less than B\n\uE041\uE042\uE012\nThis is an if statement that appears inside another if statement. Nested if-statement\n\uE041\uE042\uE012\nAn else clause always goes with __________. the closest previous if clause that doesn't already have its own else clause\n\uE041\uE042\uE012\nWhen determining whether a number is inside a range, it's best to use this operator. &&\n\uE041\uE042\uE012\nThis determines whether two different String objects contain the same string. The Equals Method\n\uE041\uE042\uE012\nThe conditional operator takes this many operands. 3\n\uE041\uE042\uE012\nThis section of a switch statement is branched to if none of the case expressions match the switch expression. Default\n\uE041\uE042\uE012\nYou can use this method to display formatted output in a console window. System. out. printf\n\uE041\uE042\uE012\nEvery complete statement ends with a __________. Semicolon\n\uE041\uE042\uE012\nThe following data:\n72 \n' A' \n\" Hello World\" \n2.8712 \nare all examples of __________. literals\n\uE041\uE042\uE012\nA group of statements, such as the contents of a class or a method, are enclosed in __________. Braces\n\uE041\uE042\uE012\nThe negation operator is __________. Unary\n\uE041\uE042\uE012\nThis key word is used to declare a named constant. namedConstant\n\uE041\uE042\uE012\nThese characters mark the beginning of a multi- line comment. /*\n\uE041\uE042\uE012\nThese characters mark the beginning of a single- line comment. //\n\uE041\uE042\uE012\nThese characters mark the beginning of a documentation comment. /**\n\uE041\uE042\uE012\nWhich Scanner class method would you use to read a string as input? nextLine\n\uE041\uE042\uE012\nWhich Scanner class method would you use to read a double as input? nextDouble\n\uE041\uE042\uE012\nYou can use this class to display dialog boxes. JOptionPane\n\uE041\uE042\uE012\nWhen Java converts a lower- ranked value to a higher- ranked type, it is called a( n) __________. widening conversion\n\uE041\uE042\uE012\nThis type of operator lets you manually convert a value, even if it means that a nar-rowing conversion will take place. Cast\n\uE041\uE042\uE012\nA left brace in a Java program is always followed by a right brace later in the program. True\n\uE041\uE042\uE012\nVariable names may begin with a number. False\n\uE041\uE042\uE012\nYou cannot change the value of a variable whose declaration uses the final key word. False\n\uE041\uE042\uE012\nA variable must be declared before it can be used. True\n\uE041\uE042\uE012\nThis part of the computer fetches instructions, carries out the operations commanded by the instructions, and produces some outcome or resultant information. CPU\n\uE041\uE042\uE012\nA byte is made up of eight Bits\n\uE041\uE042\uE012\nEach byte is assigned a unique Address\n\uE041\uE042\uE012\nThis type of memory can hold data for long periods of time\u2014 even when there is no power to the computer. Secondary Storage\n\uE041\uE042\uE012\nIf you were to look at a machine language program, you would see _________. A stream of binary numbers\n\uE041\uE042\uE012\nThis type of program is designed to be transmitted over the Internet and run in a Web browser. Applet\n\uE041\uE042\uE012\nThese are words that have a special meaning in the programming language. Key Words\n\uE041\uE042\uE012\nThese are symbols or words that perform operations on one or more operands. Operators\n\uE041\uE042\uE012\nThese characters serve specific purposes, such as marking the beginning or ending of a statement, or separating items in a list. Punctuation\n\uE041\uE042\uE012\nThese are words or names that are used to identify storage locations in memory and parts of the program that are created by the programmer. Programmer defined names.\n\uE041\uE042\uE012\nThese are the rules that must be followed when writing a program. Syntax\n\uE041\uE042\uE012\nThis is a named storage location in the computer's memory. Variable\n\uE041\uE042\uE012\nThe Java compiler generates __________. Byte code\n\uE041\uE042\uE012\nJVM stands for __________. Java Virtual Machine");
			startActivityForResult(i, result);
			break;  
		
		case 1:   //  CH4-8
			i.putExtra("stringkey","What will the println statement in the \nfollowing program segment display?\nint x = 5;\nSystem.out.println(x++); 5\n\uE041\uE042\uE012\nWhat will the println statement in the following program segment display?\nint x = 5;\nSystem.out.println(++x) 6\n\uE041\uE042\uE012\nIn the expression number++, the ++ operator is in what mode? Postfix\n\uE041\uE042\uE012\nWhat is each repetition of a loop known as? Iteration\n\uE041\uE042\uE012\nThis is a variable that controls the number of iterations performed by a stop? Loop Control Variable\n\uE041\uE042\uE012\nThe while loop is this type of loop Pretest\n\uE041\uE042\uE012\nThe do-loop is this type of loop Posttest\n\uE041\uE042\uE012\nThe for loop is this type of loop Pretest\n\uE041\uE042\uE012\nThis type of loop has no way of ending and repeats until the program is interrupted Infinite\n\uE041\uE042\uE012\nThis type of loop always executes at least once Do-While\n\uE041\uE042\uE012\nThis expression is executed by the for loop only once, regardless of the number of iterations. Initialization Expression\n\uE041\uE042\uE012\nThis is a variable that keep a running total Accumulator\n\uE041\uE042\uE012\nThis is a special value that signals when there are no more items from a list of items to be processed. This value cannot be mistaken as an item from the list. Sentinel\n\uE041\uE042\uE012\nTo open a file for writing, you use the following class PrintWriter\n\uE041\uE042\uE012\nTo open a file for reading, you use the following classes File and Scanner\n\uE041\uE042\uE012\nWhen a program is finished using a file, it should do this close the file\n\uE041\uE042\uE012\nThis class allows you to use the print and println methods to write data to a file PrintWriter\n\uE041\uE042\uE012\nThis class allowed you to read a line from a file Scanner\n\uE041\uE042\uE012\nThis type of method does not return a value. Void\n\uE041\uE042\uE012\nThis appears at the beginning of a method definition. Header\n\uE041\uE042\uE012\nThe body of a method is enclosed in __________. Curly Braces { }\n\uE041\uE042\uE012\nA method header can contain __________. Method Modifiers, the method return type, the method name, and a list of parameter declarations\n\uE041\uE042\uE012\nA value that is passed into a method when it is called is known as a( n) __________. Argument\n\uE041\uE042\uE012\nA variable that receives a value that is passed into a method is known as a( n) __________. Parameter\n\uE041\uE042\uE012\nThis javadoc tag is used to document a parameter variable. @param\n\uE041\uE042\uE012\nThis statement causes a method to end and sends a value back to the statement that called the method. return\n\uE041\uE042\uE012\nThis javadoc tag is used to document a method's return value. @return\n\uE041\uE042\uE012\nYou can terminate a method header with a semi colon False\n\uE041\uE042\uE012\nWhen passing an argument to a method, Java will automatically per-form a widening conversion ( convert the argument to a higher- ranking data type), if necessary. True\n\uE041\uE042\uE012\nWhen passing an argument to a method, Java will automatically perform a narrowing conversion ( convert the argument to a lower- ranking data type), if necessary. False\n\uE041\uE042\uE012\nA parameter variable's scope is the entire program that contains the method in which the parameter is declared. False\n\uE041\uE042\uE012\nWhen code in a method changes the value of a parameter, it also changes the value of the argument that was passed into the parameter. False\n\uE041\uE042\uE012\nWhen an object, such as a String , is passed as an argument, it is actually a reference to the object that is passed. True\n\uE041\uE042\uE012\nThe contents of a String object cannot be changed. True\n\uE041\uE042\uE012\nWhen passing multiple arguments to a method, the order in which the arguments are passed is not important. False\n\uE041\uE042\uE012\nNo two methods in the same program can have a local variable with the same name. False\n\uE041\uE042\uE012\nIt is possible for one method to access a local variable that is declared in another method. False\n\uE041\uE042\uE012\nYou must have a return statement in a value- returning method. True\n\uE041\uE042\uE012\nThis is a collection of programming statements that specify the fields and methods that a particular type of object may have. Class\n\uE041\uE042\uE012\nA class is analogous to a( n) __________. Blueprint\n\uE041\uE042\uE012\nAn object is a( n) __________. Instance of a class\n\uE041\uE042\uE012\nThis is a class member that holds data. Field\n\uE041\uE042\uE012\nThis key word causes an object to be created in memory. new\n\uE041\uE042\uE012\nThis is a method that gets a value from a class's field, but does not change it. Accessor\n\uE041\uE042\uE012\nThis is a method that stores a value in a field or in some other way changes the value Mutator\n\uE041\uE042\uE012\nWhen the value of an item is dependent on other data, and that item is not updated when the other data is changed, what has the value become? Stale\n\uE041\uE042\uE012\nThis is a method that is automatically called when an instance of a class is created. Constructor\n\uE041\uE042\uE012\nWhen a local variable has the same name as a field, the local variable's name does this shadows\n\uE041\uE042\uE012\nThis is automatically provided for a class if you do not write one yourself. Default Constructor\n\uE041\uE042\uE012\nTwo or more methods in a class may have the same name, as long as this is different. The Parameter list\n\uE041\uE042\uE012\nThe process of matching a method call with the correct method is known as __________. Binding\n\uE041\uE042\uE012\nA class's responsibilities are __________. things the class knows and actions the class performs\n\uE041\uE042\uE012\nThe new operator creates an instance of a class. True\n\uE041\uE042\uE012\nEach instance of a class has its own set of instance fields. True\n\uE041\uE042\uE012\nWhen you write a constructor for a class, it still has the default constructor that Java automatically provides. False\n\uE041\uE042\uE012\nA class may not have more than one constructor. False\n\uE041\uE042\uE012\nTo find the classes needed for an object- oriented application, you identify all of the verbs in a description of the problem domain. False\n\uE041\uE042\uE012\nIn an array declaration, this indicates the number of elements that the array will have. Size declarator\n\uE041\uE042\uE012\nEach element of an array is accessed by a number known as a( n) __________. Subscript\n\uE041\uE042\uE012\nThe first subscript in an array is always ___________. 0\n\uE041\uE042\uE012\nThe last subscript in an array is always __________. 1 less than the number of elements\n\uE041\uE042\uE012\nArray bounds checking happens __________. When the program runs\n\uE041\uE042\uE012\nThis array field holds the number of elements that the array has. Length\n\uE041\uE042\uE012\nThis search algorithm steps through an array, comparing each item with the search value. Sequential Search\n\uE041\uE042\uE012\nThis search algorithm repeatedly divides the portion of an array being searched in half. Binary Search\n\uE041\uE042\uE012\nThis is the typical number of comparisons performed by the sequential search on an array of N elements ( assuming the search values are consistently found). N/2\n\uE041\uE042\uE012\nWhen initializing a two- dimensional array, you enclose each row's initialization list in ___________. Brackets[ ]\n\uE041\uE042\uE012\nTo insert an item at a specific location in an ArrayList object, you use this method. add\n\uE041\uE042\uE012\nTo delete an item from an ArrayList object, you use this method. remove\n\uE041\uE042\uE012\nTo determine the number of items stored in an ArrayList object, you use this method. size\n\uE041\uE042\uE012\nJava does not allow a statement to use a subscript that is outside the range of valid subscripts for an array. True\n\uE041\uE042\uE012\nAn array's sitze declarator can be a negative integer expression. False\n\uE041\uE042\uE012\nBoth of the following declarations are legal and equivalent: \nint[] numbers; \nint numbers[]; True\n\uE041\uE042\uE012\nThe subscript of the last element in a single- dimensional array is one less than the total number of elements in the array. True\n\uE041\uE042\uE012\nThe values in an initialization list are stored in the array in the order that they appear in the list. True\n\uE041\uE042\uE012\nThe Java compiler does not display an error message when it processes a statement that uses an invalid subscript. True\n\uE041\uE042\uE012\nThe first size declarator in the declaration of a two- dimensional array represents the number of columns. The second size declarator represents the number of rows. False\n\uE041\uE042\uE012\nAn ArrayList automatically expands in size to accommodate the items stored in it. True\n\uE041\uE042\uE012\nThis type of method cannot access any non- static member variables in its own class. Static\n\uE041\uE042\uE012\nWhen an object is passed as an argument to a method, this is actually passed. A reference to the object\n\uE041\uE042\uE012\nIf you write this method for a class, Java will automatically call it any time you con-catenate an object of the class with a string. toString\n\uE041\uE042\uE012\nMaking an instance of one class a field in another class is called ___________. Aggregation\n\uE041\uE042\uE012\nThis is the name of a reference variable that is always available to an instance method and refers to the object that is calling the method. this\n\uE041\uE042\uE012\nThis enum method returns the position of an enum constant in the declaration. ordinal\n\uE041\uE042\uE012\nAssuming the following declaration exists: enum Seasons { SPRING, WINTER, SUMMER, FALL } what is the fully qualified name of the FALL constant? Seasons.FALL\n\uE041\uE042\uE012\nYou cannot use the fully qualified name of an enum constant for this. A case expression\n\uE041\uE042\uE012\nThe Java Virtual Machine periodically performs this process, which automatically removes unreferenced objects from memory. garbage collection\n\uE041\uE042\uE012\nIf a class has this method, it is called automatically just before an instance of the class is destroyed by the Java Virtual Machine. finialize\n\uE041\uE042\uE012\nCRC stands for Class, Responsibilities , Collaborations\n\uE041\uE042\uE012\nA static member method may refer to non- static member variables of the same class, but only after an instance of the class has been defined. False\n\uE041\uE042\uE012\nAll static member variables are initialized to - 1 by default. False\n\uE041\uE042\uE012\nWhen an object is passed as an argument to a method, the method can access the argument. True\n\uE041\uE042\uE012\nA method cannot return a reference to an object. False\n\uE041\uE042\uE012\nYou can declare an enumerated data type inside a method. False\n\uE041\uE042\uE012\nEnumerated data types are actually special types of classes. True\n\uE041\uE042\uE012\nenum constants have a toString method. True");
			startActivityForResult(i, result);
			break;
		case 2:   // CH8-11
			i.putExtra("stringkey","When an Object is passed to a method, the method may change the values in the object True\n\uE041\uE042\uE012\nYou cannot use the fully-qualified name of an enum constant for this A case experssion\n\uE041\uE042\uE012\nLook at the Following declaration:\n\nenum Tree { OAK, MAPLE, PINE }\n\nWhat is the ordinal value of the MAPLE enum constant? 1\n\uE041\uE042\uE012\nIf the this variable is used as a constructor call, A compiler error will result, if it is not the first statement of the constructor\n\uE041\uE042\uE012\nA class's static methods do not operate on the fields that belong to any instance of the class True\n\uE041\uE042\uE012\nIf you have defined a class SavingsAccount with a public static method getNumberOfAccounts(), and created a SavingsAccount object referenced by the variable account20, which of the following will call the getNumberOfAccounts()method? SavingsAccount.getNumberOfAccounts();\n\uE041\uE042\uE012\nThe JVM periodically performs this process to remove unreferenced objects from memory. garbage collection\n\uE041\uE042\uE012\nIf the following is from the method section of a UML diagram, which of the following statements is true?\n\n+ equals(object2:Stock) : boolean This is a public method that accepts a FeetInches object as its argument and returns a boolean value\n\uE041\uE042\uE012\nYou may use this to compare two enum data values. The equals and compareTo methods that automatically come with the enum data type\n\uE041\uE042\uE012\nLook at the following declaration.\n\nenum Tree { OAK, MAPLE, PINE }\n\nWhat is the fully-qualified name of the PINE enum constant? Tree.PINE\n\uE041\uE042\uE012\nIf the this variable is used as a constructor call, A compiler error will result if it is not the first statement of the constructor\n\uE041\uE042\uE012\nTo copy an object to another object of the same class Write a copy method that will make a field by field copy of the two objects\n\uE041\uE042\uE012\nEnumerated types have this method, which returns the position of an enum constant in the declaration list. ordinal\n\uE041\uE042\uE012\nIf you have defined a class named SavingsAccountwith a public static data member namednumberOfAccounts, and created a SavingsAccountobject referenced by the variable account20, which of the following will assign numberOfAccounts to numAccounts? numAccounts = SavingsAccount.numberOfAccounts;\n\uE041\uE042\uE012\nWhen a method's return type is a class, what is actually returned to the calling program? A reference to an object of that class\n\uE041\uE042\uE012\nThe only limitation that static methods have is They cannot refer to non-static members of the class\n\uE041\uE042\uE012\nWhen the this variable is used to call a constructor, . It must be the first statement in the constructor making the call\n\uE041\uE042\uE012\nYou can declare an enumerated data type inside of a method. False\n\uE041\uE042\uE012\nThe term for the relationship created by object aggregation is Has a\n\uE041\uE042\uE012\nIf you write a toString method to display the contents of an object, object1, for a class, Class1, then the following two statements are equivalent:\n\nSystem.out.println(object1);\nSystem.out.println(object1.toString()); True\n\uE041\uE042\uE012\nYou cannot use the fully-qualifed name of an enum constant for this a case expression\n\uE041\uE042\uE012\nTo compare two objects Write an equals method that will make a field by field comparison of the two object\n\uE041\uE042\uE012\nWhat will be returned from a method, if the following is the method header:\n\npublic Rectangle getRectangle() The address of an object in the class Rectangle\n\uE041\uE042\uE012\nAn instance of a class does not have to exist in order for values to be stored in a class's static fields True\n\uE041\uE042\uE012\nIf you write a toString method for a class, Java will automatically call the method any time you concatenate an object of the class with a string. True\n\uE041\uE042\uE012\nWhich of the following is not true about static methods? They are called from an instance of the class.\n\uE041\uE042\uE012\nFew programmers use wrapper classes because They are immutable, They are not easy to use\n\uE041\uE042\uE012\nThe Character wrapper provides numerous methods for Testing and converting char variables\n\uE041\uE042\uE012\nWhat will be printed after the after the following code is executed?\n\nString str = \"abc456\";\nint i = 0;\nwhile (1<6)\n{\nif(character.isLetter(str.charAt(i))\nSystem.out.println(Character.toUpperCase(charAt(i)));\ni++;\n} ABC\n\uE041\uE042\uE012\nIf String str = \"RSTUVWXYZ\", what will be the value returned from str.charAt(5)? W\n\uE041\uE042\uE012\nIf a non-letter is passed to toLowerCase or toUpperCase method, it is returned unchanged True\n\uE041\uE042\uE012\nWhat will be the value of matches after the following code is executed? \n\nboolean matches;\nString[] productCodes = {\"456HI345\", \"3456hj\"};\nmatches = productCodes[0].regionMatches(true, 1, productCode[1], 2, 3) True\n\uE041\uE042\uE012\nWhat will be the value of loc after the following code is executed?\nint loc;\nString str = \"The cow jumped over the moon.\"\nloc = str.indexOf(\"ov\"); 15\n\uE041\uE042\uE012\nIn the following statement, what data type must recField be:\nstr.getChars(5, 10, recField, 0); char[ ]\n\uE041\uE042\uE012\nWhen you are writing with string objects that may have unwanted spaces at the beginning or end of the strings, use the ____ method to delete them. trim\n\uE041\uE042\uE012\nThe valueOf() method accepts a string representation as an argument and returns its equivalent integer value. False\n\uE041\uE042\uE012\nStringBuffer objects are immutable. False\n\uE041\uE042\uE012\nThe following StringBuffer constructor will\nStringBuffer str = new String Buffer(25) Give the object, str, 25 bytes of storage and not store anything in them\n\uE041\uE042\uE012\nWhat would be the results of executing the following code?\n\nStringBuffer str = new String Bufffer(\"Little Jack Horner\")\nstr.append(\"sat on the\");\nstr.append(\"corner\"); str would equal \" Little Jack Horner sat on the corner\"\n\uE041\uE042\uE012\nWhen using StringBuffer insert method, you cannot insert Another StringBuffer type\n\uE041\uE042\uE012\nWhat will be the value of strbuff after the following statements are executed?\n\nStringBuffer strbuff = new StringBuffer('We have lived in Chicago, Trenton, and Atlanta.\"\nstrbuff.replace(17,24,\"Tampa\"); We have lived in Tampa, Trenton, and Atlanta.\n\uE041\uE042\uE012\nIn a string that contains a series of words or other items of data separated by spaces or other characters, the programming term for the spaces or other characters is Delimiter\n\uE041\uE042\uE012\nTo use the class StringTokenizer, you must have the following import statement. import java.util.StringTokenizer;\n\uE041\uE042\uE012\nWhat will be the tokens in the following statement?\n\nStringTokenizer = strToken new StringTokenizer(\"123-456-7890\", \"-\",true); 123, 456 7890, and -\n\uE041\uE042\uE012\nFor the following code, how many times would the loop execute?\n\nStringTokenizer strToken = new StringTokenizer(\"Cars, trucks, and SUVs are all types of automobiles.\");\nwhile(strToken.hasMoreTokens)\n{\nSystem.out.println(strToken.nextToken());\n} 9\n\uE041\uE042\uE012\nIf you are using characters other than whitespaces as delimeters, you will probably want to trim the string before tokenizing; otherwise, the leading and/or following whitespaces will become part of the first and/or last token True\n\uE041\uE042\uE012\nWhat does the following statement do?\n\nDouble number = new Double(8.8); It Creates a Double Object; It initializes that object to 8.8; It assigns the object's address to the number variable\n\uE041\uE042\uE012\nTo convert the string, str = \"285.74\" to a double and store it in the variable x, use the following statement. double x = Double.parseDouble(str);\n\uE041\uE042\uE012\nTo convert the integer vaiable, number = 56, to a string, use the following statement String str = Integer.toString(number);\n\uE041\uE042\uE012\nwhich of the following statements will print the maximum value a double variable may have? System.out println(Double.MAX_VALUE);\n\uE041\uE042\uE012\nYou must call a method to get the value of a wrapper class object False\n\uE041\uE042\uE012\nAlthough it is not normally useful to create objects from the wrapper classes, programmers might use wrapper classes because They provide static methods that are very useful\n\uE041\uE042\uE012\nUse the following import statement when using the character wrapper class No import statement is needed\n\uE041\uE042\uE012\nWhat will be printed after the after the following code is executed?\n\nString str = \"abc456\";\nint i = 0;\nwhile (1<6)\n{\nif(!Character.isLetter(str.charAt(i))\nSystem.out.println(Character.toUpperCase(charAt(i)));\ni++;\n} 456\n\uE041\uE042\uE012\nIf String str = \"ABCDEFGHI,\" what will be returned from Character.toLowerCase(str.charAt(5))? f\n\uE041\uE042\uE012\nWhat eill be the value of matches after the following code has been executed>\n\nboolean matches;\nString str1 = \"The cow jumped over the moon.\";\nString str2 = \"moon';\nmatches = str1.endsWith(str2); False\n\uE041\uE042\uE012\nWhat will be the value of loc after the following code is executed? \n\nint loc; \nString str = \"The cow jumped over the moon.\"\nloc = str.lastIndexOf(\"ov\",14); -1\n\uE041\uE042\uE012\nWhat is the value of str after the followuing code has been executed? \n\nString str;\nStrinf sourceStr = 'Hey diddle, diddle, the cat and the fiddle\";\nstr = sourceStr.substring(12,17); diddl\n\uE041\uE042\uE012\nTwo ways of concatenating two strings are Use the concat() method or use the + between the two Strings\n\uE041\uE042\uE012\nThe valueOf() method accepts a value of any primitive data type as an argument and returns a string representation of the value. True\n\uE041\uE042\uE012\nStringBuffer objects are not immutable. True\n\uE041\uE042\uE012\nThe parameterless constructor for a StringBuffer object gives the object enough storage space to hold ___ 16 characters\n\uE041\uE042\uE012\nWhat would be the results of executing the following code?\n\nStringBuffer strbuff = new StringBuffer(12);\nstrbuff.append(\"The cow\");\nstrbuff.append(\"jumped over the\");\nstrbuff.append(\"moon\"); strbuff would equal \"The cow jumped over the moon\"\n\uE041\uE042\uE012\nGiven the following statement, which of the following is not true?\nstr.insert(8,32) The insert will start at position 32\n\uE041\uE042\uE012\nWhat will be the value of strbuff after the following statements are executed?\n\nStringBuffer strbuff = new StringBuffer('We have lived in Chicago, Trenton, and Atlanta.\"\nstrbuff.replace(26,33,\"Tampa\"); We have lived in Chicago, Tampa, and Atlanta.\n\uE041\uE042\uE012\nIn a string that contains a series of words or other items of data separated by spaces or other characters, the programming term for the data items is Token\n\uE041\uE042\uE012\nIf you do not specify delimiters in the StringToken constructor, which of the following cannot be a delimiter? Semicolon\n\uE041\uE042\uE012\nwhat will be the tokens in the following statements?\n\nStringTokenizer strToken = newStringTokenizer(\"January 1, 2003\", \",\",true); January, 1, 2004, space, comma\n\uE041\uE042\uE012\nFor the following code, how many times would the while loop execute?\n\nStringTokenizer strToken = new StringTokenizer('Ben and Jerry's ice cream is great.');\nwhile (strToken.hasMoreTokens)\n{\nSystem.out.println(strToken.nextToken());\n} 7\n\uE041\uE042\uE012\nIf a string has more than one character used as a delimiter, we must write a loop to determine the tokens, one fore each delimiter character. False\n\uE041\uE042\uE012\nWhat does the following statement do?\n\nFloat number = new Float(8.8); It creates a Float Object; It initializes that object to 8.8; It assigns the object's address to the number variable\n\uE041\uE042\uE012\nTo convert the string, str = \"285\" to an integer and store it in the variable x, use the following statement integer x = Integer.parseInt(str);\n\uE041\uE042\uE012\nTo convert the double variable, d = 543.98, to a string, use the following statement, String str = Double.toString(d);\n\uE041\uE042\uE012\nWhich of the following Statements will print the maximum value an integer variable may have? System.out.println(Integer.MAX_VALUE);\n\uE041\uE042\uE012\nYou cannot assign a value to a wrapper class object. False\n\uE041\uE042\uE012\nWhen an \"is a\" relationship exists between objects, it means that the specialized object has All the characteristics of the general object, plus additional chracteristics\n\uE041\uE042\uE012\nWhich of the following statements declares as a subclass of PayType? public class Salaried extends PayType\n\uE041\uE042\uE012\nIf ClassA is Derived from ClassB, then Public members in ClassB are public in ClassA, but private members in ClassB cannot be directly accessed in ClassA\n\uE041\uE042\uE012\nIn UML diagrams, inheritance is shown With a line that has an open arrowhead at one end that points to the superclass\n\uE041\uE042\uE012\nIt is not possible for a super class to call a subclass's method. True\n\uE041\uE042\uE012\nIf a subclass constructor does not explicitly call as superclass constructor, Java will automatically call the superclass's default constructor just before the code in the subclass's constructor executes\n\uE041\uE042\uE012\nIf a method in a subclass has the same signature as a method in the superclass, the subclass method overloads the superclass method. False\n\uE041\uE042\uE012\nA protected member of a class may be directly accessed by Methods of the same class; Methods of a Subclass; Methods in the Same Package\n\uE041\uE042\uE012\nWhen declaring class data members, it is best to declare them as Private Members\n\uE041\uE042\uE012\nIf you do not provide an access specifier for a class member, the class member is given ___ access by default Package\n\uE041\uE042\uE012\nIf ClassC is derived from ClassB, which is derived from ClassA, this would be an example of A chain of inheritance\n\uE041\uE042\uE012\nEvery class is either directly or indirectly derived from he Object class. True\n\uE041\uE042\uE012\nIf a class contains an abstract method You cannot create an instance of the class; The method will have only a header, but not a body, and end with a semicolon; Then Method must be overridden in subclasses\n\uE041\uE042\uE012\nAn abstract class is not instantiated, but serves as a superclass for other classes. True\n\uE041\uE042\uE012\nGiven the following statement which of the following is true?\n\npublic class ClassB implements ClassA{ } ClassB must override each method in ClassA\n\uE041\uE042\uE012\nAll fields declared in an interface Are final and static\n\uE041\uE042\uE012\nWhen on object is a specialized version of another object, there is a(n) ____ relationship between them. \"is a\"\n\uE041\uE042\uE012\nA derived class can directly access Only Public and protected members of the base class\n\uE041\uE042\uE012\nIn the following statement which is the base class?\n\npublic class ClassA extends ClassB implements ClassC ClassB\n\uE041\uE042\uE012\nIn UML diagrams, inheritance is shown With a line that has an open arrowhead at one end that point to the base class\n\uE041\uE042\uE012\nIn an inheritance relationship, the derived class constructor always executes before the base class constructor False\n\uE041\uE042\uE012\nIf a base class does not have a default constructor, Then a class that is derived from it, must call one of the constructors that the base class does have\n\uE041\uE042\uE012\nIf two methods in the same class have the same name but different signatures, the second overrides the first. False\n\uE041\uE042\uE012\nProtected members are Not quite private; Not quite different\n\uE041\uE042\uE012\nProtected class members are denoted in a UML diagram with the symbol #\n\uE041\uE042\uE012\nThe difference between protected access and package is Protected members may be accessed by methods in the same package or in a derived class, even when the derived class is in a different package\n\uE041\uE042\uE012\nIn a class hierachy The more general classes are toward the top of the tree and the more specialized are toward the bottom\n\uE041\uE042\uE012\nEvery class has a toString method and equal's method inherited from the Object class True\n\uE041\uE042\uE012\nIf a class contains an abstract method, The method will have only a header, but not a body, and end with a semicolon\n\uE041\uE042\uE012\nAll methods in an abstract class must also be declared abstract False\n\uE041\uE042\uE012\nIn an interface all methods have Public access\n\uE041\uE042\uE012\nWhich of the following statements correctly specifies three interfaces: public class ClassA implements Interface1, Interface2, Interface3\n\uE041\uE042\uE012\nWhen an interface variable references an object you can use the interface variable to call all the methods in the class implementing the interface. False\n\uE041\uE042\uE012\nWhat will be the value of x[1] after the following code is executed?\n\nint[] x = { 22, 33, 44 };\narrayProcess(x);\n...\npublic static void arrayProcess(int[] a)\n{\nfor(int k = 0; k < 3; k++)\n{\na[k] = a[k] + 5;\n}\n} 38\n\uE041\uE042\uE012\nA ragged array is A two-dimensional array when the rows are of different lengths\n\uE041\uE042\uE012\nWhat will be the value of x[8] after the following code has been executed?\n\nfinal int SUB = 12;\nint[] x = new int[SUB];\nint y = 20;\nfor(int i = 0; i < SUB; i++)\n{\nx[i] = y;\ny += 5;\n} 60\n\uE041\uE042\uE012\nWhat would be the results of the following code?\n\nint[] array1 = new int[25];\n... // Code that will put values in array1\nint value = array1[0];\nfor (int a = 1; a < array1.length; a++)\n{\nif (array1[a] < value)\nvalue = array1[a];\n} Value contains the lowest value in array1\n\uE041\uE042\uE012\nWhat would be the results after the following code was executed?\n\nint[] x = {23, 55, 83, 19};\nint[] y = {36, 78, 12, 24};\nfor(int a = 0; a < x.length; a++)\n{\nx[a] = y[a];\ny[a] = x[a];\n} x[] = {36, 78, 12, 24} and y[] = {36, 78, 12, 24}\n\uE041\uE042\uE012\nWhat will be the value of x[8] after the following code has been executed?\n\nfinal int SUB = 12;\nint[] x = new int[SUB];\nint y = 100;\nfor(int i = 0; i < SUB; i++)\n{\nx[i] = y;\ny += 10;\n} 180\n\uE041\uE042\uE012\nIf numbers is a two-dimensional int array that has been initialized and total is an int that has been set to 0, which of the following will sum all the elements in the array? for (int row = 0; row < numbers.length; row++)\n{\nfor (int col = 0; col < numbers[row].length; col++)\ntotal += numbers[row][col];\n}\n\uE041\uE042\uE012\nWhat would be the results after the following code was executed?\n\nint[] x = {23, 55, 83, 19};\nint[] y = {36, 78, 12, 24};\nx = y;\ny = x; x[] = {36, 78, 12, 24} and y[] = {36, 78, 12, 24}\n\uE041\uE042\uE012\nWhat would be the results of the following code?\n\nint[] x = { 55, 33, 88, 22, 99,\n11, 44, 66, 77 };\nint a = 10;\nif(x[2] > x[5])\na = 5;\nelse\na = 8; a = 5\n\uE041\uE042\uE012\nIf a[] and b[] are two integer arrays, the expression a == b compares the array contents. False\n\uE041\uE042\uE012\nGiven the following two-dimensional array declaration, which statement is true?\n\nint [][] numbers = new int [6] [9]; The array numbers has 6 rows and 9 columns\n\uE041\uE042\uE012\nWhat does the following statement do?\n\ndouble[] array1 = new double[10]; All of the above\n\uE041\uE042\uE012\nThe sequential search algorithm Uses a loop to sequentially step through an array, starting with the first element\n\uE041\uE042\uE012\nAny items typed on the command-line, separated by space, after the name of the class are considered to be one or more arguments that are to be passed into the main method. True\n\uE041\uE042\uE012\nJava does not limit the number of dimensions that an array may have. True\n\uE041\uE042\uE012\nThe binary search algorithm Will cut the portion of the array being searched in half each time the loop fails to locate the search value\n\uE041\uE042\uE012\nint[] x = {22, 33, 44};\narrayProcess(x[1]);\n...\npublic static void arrayProcess(int a)\n{\na = a + 5;\n} 33\n\uE041\uE042\uE012\nAn ArrayList object automatically expands in size to accommodate the items stored in it. True\n\uE041\uE042\uE012\nThe following statement creates an ArrayListobject. What is the purpose of the notation?\n\nArrayList<String> arr = new ArrayList<String>(); **It specifies that only String objects may be stored in the ArrayList object.\n\uE041\uE042\uE012\nWhat would be the results of the following code?\n\nfinal int SIZE = 25;\nint[] array1 = new int[SIZE];\n\n... // Code that will put values in array1\n\nint value = 0;\nfor (int a = 0; a < array1.length; a++)\n{\nvalue += array1[a];\n} value contains the sum of all the values in array1\n\uE041\uE042\uE012\nGiven that String[] str has been initialized, to get a copy of str[0] with all characters converted to upper case, use the following statement str[0].toUpperCase();\n\uE041\uE042\uE012\nIn memory, an array of String objects Consists of an array of references to Stringobjects\n\uE041\uE042\uE012\nFor the following code, what would be the value of str[2]?\n\nString[] str = {\"abc\", \"def\", \"ghi\", \"jkl\"}; A reference to the String \"ghi\"\n\uE041\uE042\uE012\nWhat will be the result of executing the following code?\n\nint[] x = {0, 1, 2, 3, 4, 5}; An array of 6 values ranging from 0-5 and referenced by the variable x will be created\n\uE041\uE042\uE012\nYou can use this ArrayList class method to insert an item at a specific location in an ArrayList. add\n\uE041\uE042\uE012\nWhat will be the value of x[8] after the following code has been executed?\n\nfinal int SUB = 12;\nint[] x = new int[SUB];\nint y = 100;\nfor(int i = 0; i < SUB; i++)\n{\nx[i] = y;\ny += 10;\n} 180\n\uE041\uE042\uE012\nIn order to do a binary search on an array, The array must first be sorted in ascending order\n\uE041\uE042\uE012\nYou can use this ArrayList class method to replace an item at a specific location in anArrayList. set\n\uE041\uE042\uE012\nThis ArrayList class method deletes an item from an ArrayList. remove\n\uE041\uE042\uE012\nThe String[] args parameter in the main method header allows the program to receive arguments from the operating system command-line. True");
			startActivityForResult(i, result);
			break;
		
		}  
		
	}

	}


