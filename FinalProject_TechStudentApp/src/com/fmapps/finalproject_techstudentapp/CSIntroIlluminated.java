package com.fmapps.finalproject_techstudentapp;




import android.app.ListActivity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.ListView;


public class CSIntroIlluminated extends ListActivity {
	Intent i;
	final int result = 1;
	
	
	
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		ListView listView = getListView();
		listView.setBackgroundResource(R.drawable.background);
		
		 //contentText = (TextView)findViewById(R.id.txtContent);
		
		i = new Intent(this,CourseContent.class);
		
		String [] chapterList = {"Chapter 1", "Chapter 2", 
				"Chapter 3", "Chapter 4", "Chapter 5", "Chapter 6 & 7",
				"Chapter 8", "Chapter 9", "Chapter 10", "Chapter 13", "Chapter 14", "Chapter 15", "Chapter 16", "Chapter 17" }; 
		/* future updates:
		"Networking Fundamentals", "Web Programming I", "C++ Programming I", "System Administration (Windows)", 
		"Introduction to Systems Analysis and Design", "Web Programming II", "System Administration (Linux)", 
		"C++ Programming II", "Database Design", "Advanced Single LAN Concept", "Graphic User Interface", 
		"Computer Security", "Object Oriented Programming in Java", "XML Data Representation", "Object Oriented Programming",
		"Design of Distributed Databases", "Interconnectivity", "Distributed Application Processing", "Network Security",
		"Advanced Object Oriented Programming in Java", "Web Services", "Data Warehousing", "Software Development Methodologies", 
		"LAN Internet Connection", "ClientServer Technology", "Installing and Maintaining Web Servers", "Advanced Security Technology", 
		"Dynamic Web Development: Servlets and JSP", "Database Administration"*/

		setListAdapter(new ArrayAdapter<String>(this,
				R.layout.listview,R.id.travel, chapterList));
		
	}
		
		
	

	protected void onListItemClick(ListView l, View v, int position, long id){
		
		switch(position){
		
		case 0:   // CH1
			i.putExtra("stringkey","2nd Gen Software Layers (in to out): Machine Language, assembly language, high-level language\n\uE041\uE042\uE012\n4th Generation Application Software: Spreadsheets, Word processors, Database Management systems\n\uE041\uE042\uE012\nAbacus: An early device to record numeric values\n\uE041\uE042\uE012\nAbstraction: A mental model that removes complex details\n\uE041\uE042\uE012\nAda Lovelace: First Programmer, The loop\n\uE041\uE042\uE012\nAlan turing: Turing Machine, Artificial Intelligence Testing\n\uE041\uE042\uE012\nApplications programmers: 1st Gen use assembly language to solve problems\n\uE041\uE042\uE012\nAssembly Languages and Transistors: Programs written using mnemonic codes, which were translated into machine languages\n\uE041\uE042\uE012\nBlaise Pascal: Mechanical device to add, subtract, multiply, and divide\n\uE041\uE042\uE012\nCard Readers to Magnetic tape Drives: Auxiliary storage devices\n\uE041\uE042\uE012\nCharles Babbage: Analytical Engine\n\uE041\uE042\uE012\nComputing as a Discipline: What can be efficiently automated?\n\uE041\uE042\uE012\nExamples of High Level Languages: Fortran, COBOL, Lisp\n\uE041\uE042\uE012\nHardware: The Physical Elements of a Computing system\n\uE041\uE042\uE012\nHarvard Mark 1, ENIAC, UNIVAC 1, Significant because? Early computers launch new era in mathematics, physics, engineering and economics\n\uE041\uE042\uE012\nHigh-level languages: English-like statements made programming easier\n\uE041\uE042\uE012\nIntegrated Circuits: Replaced Circuit boards, smaller, cheaper, faster, more reliable\n\uE041\uE042\uE012\njoseph Jacquard: Jacquard's Loom, the punched card\n\uE041\uE042\uE012\nLaptops: Everyone has his/her own portable computer\n\uE041\uE042\uE012\nLarge-scale Integration: great advances in chip technology\n\uE041\uE042\uE012\nLayers of a computing system (in to out): information, hardware, programming, operating systems, applications, communications\n\uE041\uE042\uE012\nMachine Language: Computer Programs written in binary\n\uE041\uE042\uE012\nMagnetic cores: replaced magnetic drums, information available instantly\n\uE041\uE042\uE012\nMagnetic Disks: replaced magnetic tape, data can be accessed directly\n\uE041\uE042\uE012\nMagnetic Drum Memory: device that rotated under a read/write head\n\uE041\uE042\uE012\nNetworking Ethernet: connects small computers to share resources file servers connect PC's in the late 1980's\n\uE041\uE042\uE012\nObject-Oriented: programming Based on a hierarchy of data objects (i.e. Java)\n\uE041\uE042\uE012\nOperating System (definition): Decides which programs to run and when\n\uE041\uE042\uE012\nParallell Computing Computers: rely on interconnected central processing and/or memory units that increase processing speed\n\uE041\uE042\uE012\nNew Companies emerge: Apple, Sun, Dell Etc.\n\uE041\uE042\uE012\nProgrammer Types: 1st Generation application programmers and systems programmers\n\uE041\uE042\uE012\nSeparation between Users and Hardware: Programmers write programs to be used by general public\n\uE041\uE042\uE012\nSoftware: the programs that provide the instructions for a computer to execute\n\uE041\uE042\uE012\nStructured Programming: a logical and disciplined approach to programming\n\uE041\uE042\uE012\nSystem Programmers: 1st Gen write the assembler (translator)\n\uE041\uE042\uE012\nSystem Software (Definition): Refined utility programs, operating system and language translators\n\uE041\uE042\uE012\nSystems Software (Examples): Utility Programs, Language translators, Operating systems\n\uE041\uE042\uE012\nTerminal: An input/output device with a keyboard and screen\n\uE041\uE042\uE012\nTransistor: Replaced vacuum tube, fast, small, durable, cheap\n\uE041\uE042\uE012\nTransistors (New Use): Memory Construction\n\uE041\uE042\uE012\nUtility Programs: Handle often needed tasks (only in gen 1 and 2)\n\uE041\uE042\uE012\nVacuum Tubes: Large, not very reliable, generated a lot of heat\n\uE041\uE042\uE012\nWorld Wide Web: Allows easy global communication through the internet");
			startActivityForResult(i, result);
			break;  
		
		case 1:   //  CH2
			i.putExtra("stringkey","Number: A unit of an abstract mathematical system to the laws of arithmetic\n\uE041\uE042\uE012\nNatural Number: The number 0 and any number obtained by repeatedly adding 1 to it\n\uE041\uE042\uE012\nNegative Number: A value less than 0, with a sign opposite to its positive counterpart\n\uE041\uE042\uE012\nInteger: A natural number, a negative of a natural number, or zero\n\uE041\uE042\uE012\nRational Number: An integer or the quotient of two integers (division by zero exclude)\n\uE041\uE042\uE012\nBase: The foundational value of a number system, which dictates the number of digits and the value of digit positions\n\uE041\uE042\uE012\nPositional Notation: A system of expressing numbers in which the digits are arranged in succession, the position of each digit has a place value, and the number is equal to the sum of the products of each digit by its place value.\n\uE041\uE042\uE012\nBinary Digit: A digit in the binary number system; a 0 or 1\n\uE041\uE042\uE012\nBit: Short for binary digit\n\uE041\uE042\uE012\nByte: Eight binary digits\n\uE041\uE042\uE012\nWord: A group of one or more bytes; the number of bits in a word is the length of the computer");
			startActivityForResult(i, result);
			break;
		case 2:   // CH3
			i.putExtra("stringkey","Analog Data: A continuous representation of data\n\uE041\uE042\uE012\nBandwidth: The number of bits or bytes that can be transmitted from one place to another in a fixed amount of time\n\uE041\uE042\uE012\nCharacter Set: A list of the characters and the codes used to represent each one\n\uE041\uE042\uE012\nCompression Ratio: The size of the compressed data divided by the size of the uncompressed data\n\uE041\uE042\uE012\nData: Basic values or facts\n\uE041\uE042\uE012\nData Compression: Reducing the amount of space needed to store a piece of data\n\uE041\uE042\uE012\nDigital Data: A discrete representation of data\n\uE041\uE042\uE012\nDigitize: The act of breaking information down into discrete pieces\n\uE041\uE042\uE012\nFloating Point: A representation of a real number that keeps track of the sign, mantissa, and exponent\n\uE041\uE042\uE012\nHuffman Encoding: Using a variable-length binary string to represent a character so that frequently used characters have short codes\n\uE041\uE042\uE012\nInformation Data: that has been organized or processed in a useful manner\n\uE041\uE042\uE012\nKeyword Encoding: Replacing a frequently used word with a single character\n\uE041\uE042\uE012\nLoss-less Compression: A data compression technique in which there is no loss of information\n\uE041\uE042\uE012\nLossy Compression: A data compression technique in which there is loss of information\n\uE041\uE042\uE012\nMultimedia: Several different media types\n\uE041\uE042\uE012\nOverflow: The condition that occurs when the results of a calculation are too large to represent in a given machine\n\uE041\uE042\uE012\nPixels: Individual dots used to represent a picture; stands for picture elements\n\uE041\uE042\uE012\nPulse-code: Modulation Variation in a signal that jumps sharply between two extremes\n\uE041\uE042\uE012\nRadix Point: The dot that separates the whole part from the fractional part in a real number in any base\n\uE041\uE042\uE012\nRaster-graphics: format Storing image information pixel by pixel\n\uE041\uE042\uE012\nReclock: The act of reasserting an original digital signal before too much degradation occurs\n\uE041\uE042\uE012\nResolution: The number of pixels used to represent a picture\n\uE041\uE042\uE012\nRun-length: Encoding Replacing a long series of repeated characters with a count of the repetition\n\uE041\uE042\uE012\nScientific Notation: An alternative floating-point representation\n\uE041\uE042\uE012\nSigned-Magnitude: Representation Number representation in which the sign represents the ordering of the number (negative and positive) and the value represents the magnitude\n\uE041\uE042\uE012\nSpatial Compression: Movie compression technique based on the same compression techniques used for still images\n\uE041\uE042\uE012\nTemporal Compression: Movie compression technique based on differences between consecutive frames\n\uE041\uE042\uE012\nTen's Complement: A representation of negative numbers, such that the negative of Iis 10 raised to kminus I\n\uE041\uE042\uE012\nVector Graphics: Representation of an image in terms of lines and shapes\n\uE041\uE042\uE012\nVideo Codec: Methods used to shrink the size of a movie");
			startActivityForResult(i, result);
			break;
		case 3:   //  CH4
			i.putExtra("stringkey","Adder: An electronic circuit that performs an addition operation on binary values\n\uE041\uE042\uE012\nBoolean Algebra: A mathematical notation for expressing two-valued logical functions\n\uE041\uE042\uE012\nCircuit: A combination of interacting gates designed to accomplish a specific logical function\n\uE041\uE042\uE012\nCircuit Equivalence: The same output for each corresponding input-value combination for two circuits\n\uE041\uE042\uE012\nCombinational Circuit: A circuit whose output is solely determined by its input values\n\uE041\uE042\uE012\nFull Adder: A circuit that computes the sum of two bits, taking an input carry bit into account\n\uE041\uE042\uE012\nGate A: device that performs a basic operation on electrical signals, accepting one or more input signals and producing a single output signal\n\uE041\uE042\uE012\nHalf Adder: A circuit that computes the sum of two bits and produces the appropriate carry bit\n\uE041\uE042\uE012\nIntegrated Circuit (chip): A piece of silicon on which multiple gates have been embedded\n\uE041\uE042\uE012\nLogic Diagram: A graphical representation of a circuit; each type of gate has its own symbol\n\uE041\uE042\uE012\nMultiplexer: A circuit that uses a few input control signals to determine which of several input data lines is routed to its output\n\uE041\uE042\uE012\nSemiconductor: Material such as silicon that is neither a good conductor nor a good insulator\n\uE041\uE042\uE012\nSequential Circuit: A circuit whose output is a function of its input values and the current state of the circuit\n\uE041\uE042\uE012\nTransistor: A device that acts either as a wire or a resister, depending on the voltage level of an input signal\n\uE041\uE042\uE012\nTruth Table: A table showing all possible input values and the associated output values");
			startActivityForResult(i, result);
			break;
		case 4:   //  CH5
			i.putExtra("stringkey","Access Time: The time it takes for a block to start being read; the sum of seek time and latency\n\uE041\uE042\uE012\nAddressability: The number of bits stored in each addressable location in memory\n\uE041\uE042\uE012\nArithmetic/Logic Unit (ALU): The computer component that performs arithmetic operations (addition, subtraction, multiplication, division) and logical operations (comparison of two values)\n\uE041\uE042\uE012\nBlock: The information stored in a sector\n\uE041\uE042\uE012\nBus width: The number of bits that can be transferred in parallel over the bus\n\uE041\uE042\uE012\nCache Memory: A type of small, high-speed memory used to hold frequently used data\n\uE041\uE042\uE012\nControl Unit: The computer component that controls the actions of the other components so as to execute instructions in sequence\n\uE041\uE042\uE012\nCPU: The central processing unit, a combination of the arithmetic/logic unit and the control unit; the 'brain' of a computer that interprets and executes instructions\n\uE041\uE042\uE012\nCylinder: The set of concentric tracks on all surfaces\n\uE041\uE042\uE012\nInput Unit: A device that accepts data to be stored in memory\n\uE041\uE042\uE012\nInstruction Register (IR): The register that contains the instruction currently being executed\n\uE041\uE042\uE012\nLatency: The time it takes for the specified sector to be in position under the read/write head\n\uE041\uE042\uE012\nMotherboard: The main circuit board of a personal computer\n\uE041\uE042\uE012\nOutput Unit: A device that prints or otherwise displays data stored in memory or makes a permanent copy of information stored in memory or another device\n\uE041\uE042\uE012\nPipelining A: technique that breaks an instruction into smaller steps that can be overlapped\n\uE041\uE042\uE012\nProgram Counter (PC): The register that contains the address of the next instruction to be executed\n\uE041\uE042\uE012\nRegister: A small storage area in the CPU used to store intermediate values or special data\n\uE041\uE042\uE012\nSector A: section of a track\n\uE041\uE042\uE012\nSeek Time: The time it takes for the read/write head to get positioned over the specified track\n\uE041\uE042\uE012\nShared Memory: Parallel Processor The situation in which multiple processors share a global memory\n\uE041\uE042\uE012\nSynchronous Processing: Multiple processors apply the same program in lockstep to multiple data sets\n\uE041\uE042\uE012\nTrack A: concentric circle on the surface of a disk\n\uE041\uE042\uE012\nTransfer Rate: The rate at which data moves from the disk to memory");
			startActivityForResult(i, result);
			break;
		case 5:   //  CH6&7
			i.putExtra("stringkey","List the four steps in Polya's \"How To Solve It List\": Understanding the problem, devising a plan, carrying out the plan & Looking Back\n\n\uE041\uE042\uE012\nWhat is an algorithm: A set of unambiguous instructions for solving a problem or subproblem in a finite amount of time using a finite amount of data\n\n\uE041\uE042\uE012\nAbstract Step: An algorithmic step containing unspecified details\n\n\uE041\uE042\uE012\nHow do you solve problems?: \nUnderstand the problem\nDevise a plan\nCarry out the plan\nLook back\n\n\uE041\uE042\uE012\nComputer Problem-Solving:\nAlgorithm Development Phase\nDevelop algorithm\nTest algorithm\nImplementation Phase\nCode algorithm\nTest algorithm\nMaintenance Phase\nUse\nMaintain\n\uE041\uE042\uE012\n\nAlgorithm Development Phase:\nDevelop algorithm\nTest algorithm\n\n\uE041\uE042\uE012\nImplementation Phase:\nCode algorithm\nTest algorithm\n\n\uE041\uE042\uE012\nMaintenance Phase: Use, Maintain\n\n\uE041\uE042\uE012\nConcrete Step: An algorithm step in which all details are specified\n\n\uE041\uE042\uE012\nTwo methodologies used to develop computer solutions to a problem: \nTop-down design focuses on the tasks to be done\nObject-oriented design focuses on the data involved in the solution\n\n\uE041\uE042\uE012\nMethodology:\nAnalyze the Problem\nUnderstand the problem!!\nDevelop a plan of attack\nList the Main Tasks (becomes Main Module)\nRestate problem as a list of tasks (modules)\nGive each task a name\nWrite the Remaining Modules\nRestate each abstract module as a list of tasks\nGive each task a name\nRe-sequence and Revise as Necessary\nProcess ends when all steps (modules) are concrete\n\uE041\uE042\uE012\n\nControl structure: An instruction that determines the order in which other instructions in a program are executed\n\n\uE041\uE042\uE012\nSequential search: search begins at the beginning of the list and continues until the item is found or the entire list has been searched\n\uE041\uE042\uE012\n\nBinary search (list must be sorted): Search begins at the \nmiddle and finds the item or eliminates half of the unexamined items; process is repeated on the half where the item might be \"say that again...\n\n\uE041\uE042\uE012\nSorting: Arranging items in a collection so that there is an ordering on one (or more) of the fields in the items\n\n\uE041\uE042\uE012\nSort Key: The field (or fields) on which the ordering is based\n\uE041\uE042\uE012\n\nSorting algorithms: Algorithms that order the items in the collection based on the sort key\n\uE041\uE042\uE012\n\nSelection Sort: A sort in which the items in a set are \nexamined to find an item that fits specified criteria. This item is appended to the sorted set and\nremoved from further consideration, and the process is repeated until all items are in the sorted set. \n\n\uE041\uE042\uE012\nBubble Sort: A sort in which the first two items to be sorted are examined and exchanged if necessary to place them in the specified order; the second item is then compared with the third (exchanging them if required), the third is compared with the fourth, and the process is repeated until all pairs have been examined and all items are in the proper sequence.\n\n\uE041\uE042\uE012\nInsertion Sort: A sorting algorithm that sequentially removes an item from a list and adds it back to the list in the appropriate position relative to the previous items in the list.\n\n\uE041\uE042\uE012\nSubprogram Statement: A statement that represents a section of code in another part of the program\n\n\uE041\uE042\uE012\nRecursion: The ability of a subprogram to call itself\n\n\uE041\uE042\uE012\nBase case: The case to which we have an answer, a simple case that can be solved easily, without recursion.\n\n\uE041\uE042\uE012\nGeneral case: the case in a recursive definition in which a smaller version of itself is called; recursive case.\nThe case that expresses the solution in terms of a call to itself with a smaller version of the problem\n\n\uE041\uE042\uE012\nQuicksort: a divide-and-conquer sorting algorithm that works by partitioning its input's elements according to their value relative to some pre-selected element.\n\n\uE041\uE042\uE012\nInformation Hiding: The practice of hiding the details of a module with the goal of controlling access to it\n\n\uE041\uE042\uE012\nAbstraction: A model of a complex system that includes only the details essential to the viewer \n\n\uE041\uE042\uE012\nData abstraction: The separation of the logical view of data from its implementation\n\n\uE041\uE042\uE012\nProcedural abstraction: Separation of the logical view of actions from their implementation\n\n\uE041\uE042\uE012\nControl abstraction: Separation of the logical view of a control structure from its implementation\n\n\uE041\uE042\uE012\nWhy is information hiding important? : Information hiding defers details until the level where the details are important. This process keeps an algorithm from being dependent on the implementation details, which may change.\n\n\uE041\uE042\uE012\nWrite a top-down design for sorting a list of names into alphabetical order:\nWHILE input names\nScan list for name closest to beginning of the alphabet \nCopy name to new list\ndelete name off original list\nwrite names back onto original list\n\uE041\uE042\uE012\n\nTop-down design process: the process is characterized by successive layers of refinement. The top-level tasks are listed. At each succeeding level, the tasks from the previous one are further developed.\n\n\uE041\uE042\uE012\nWhat does it mean when we say that a computer is a programmable device? This means that data and instructions are logically the same and are stored in the same place. The consequence of this fact is that the program the computer executes is not wired into the hardware but entered from outside.\n\uE041\uE042\uE012\n\nfive operations of machine language: Store, retrieve, and process data, to input data and to output data.\n\n\uE041\uE042\uE012\nHow many low-level tasks can each machine language instruction perform? One low-level task\n\n\uE041\uE042\uE012\nWhat is a virtual machine? Discuss this definition in terms of the Pep/8 computer: \nA hypothetical machine designed to illustrate important features of a real computer. The Pep/8 computer is a virtual machine designed to illustrate the features of the von Neumann architecture. It has instructions to store, retrieve, and process data as well as instructions to input and output data.\n\n\uE041\uE042\uE012\nDistinguish between the IR (instruction register) and the PC (program counter)? \nIR contains an instruction \"the one being executed\". PC contains an address \"the address of the next instruction to be executed\".\n\n\uE041\uE042\uE012\nDistinguish between the Pep/8 menu options Assemble, Load, and Execute (run)?\nAssemble translates the assembly language program into machine code. Load puts the program into memory ready to be executed. Execute executes the loaded program.\n\uE041\uE042\uE012\n\nDistinguish between the looping construct and the selection construct?\nLooping repeats an action or actions while a condition is true. A selection determines if a condition is true and does one thing if it is and another thing if it is not.\n\uE041\uE042\uE012\n\nWhat are the constructs that pseudocode must be able to express? \nVariables, assignment, input/output, repetition, selection ex. \"if then, if then else\"\n\uE041\uE042\uE012\n\nComputer: A programmable electronic device that can store, retrieve, and process data\n\n\uE041\uE042\uE012\nMachine language: The language made up of binary coded instructions built into the hardware of a particular computer and used directly by the computer\n\n\uE041\uE042\uE012\nCharacteristics of machine language: Every processor type has its own set \u000Bof specific machine instructions\nThe relationship between the processor and the instructions it can carry out is completely integrated\nEach machine-language instruction does only one very low-level task\n\n\uE041\uE042\uE012\nVirtual computer: A hypothetical machine designed to contain the important features of a real computer that we want to illustrate\n\uE041\uE042\uE012\n\nPep/8: A virtual computer designed by Stanley Warford that has 39 machine-language instructions\n\n\uE041\uE042\uE012\nFeatures in Pep/8: Registers/Status Bits Covered\nThe program counter (PC) (contains the address \u000Bof the next instruction to be executed)\nThe instruction register (IR) \u000B(contains a copy of the instruction being executed)\nThe accumulator (A register)\nThe memory unit is made up of 65,636 bytes of storage\n\n\uE041\uE042\uE012\nOperation code: Specifies which instruction is to be carried out\n\n\uE041\uE042\uE012\nRegister specifier: Specifies which register is to be used (only use A in this chapter)\n\n\uE041\uE042\uE012\nAddressing-mode: specifier Says how to interpret the operand part of the instruction\n\uE041\uE042\uE012\n\nPep8/Simulator: A program that behaves just like the Pep/8 virtual machine behaves\n\n\uE041\uE042\uE012\nAssembly language: A language that uses mnemonic codes to represent machine-language instructions\n\uE041\uE042\uE012\n\nAssembler: A program that reads each of the instructions in mnemonic form and translates it into the machine-language equivalent\n\uE041\uE042\uE012\n\nPseudocode: A mixture of English and formatting to make the \nsteps in an algorithm explicit\n\n\uE041\uE042\uE012\nOutput Printing: a value on an output device Write, Print\n\uE041\uE042\uE012\n\nInput: Getting values from the outside word and storing them into variables\n\n\uE041\uE042\uE012\nRepetition: Repeating a series of statements \nSet count to 1\nWHILE ( count < 10)\nWrite \"Enter an integer number\"\nRead aNumber\nWrite \"You entered \" + aNumber\nSet count to count + 1\n\uE041\uE042\uE012\n\nSelection: Making a choice to execute or skip a statement (or group of statements)\nRead number\nIF (number < 0)\nWrite number + \" is less than zero.\"\nor\nWrite \"Enter a positive number.\"\nRead number\nIF(number < 0)\nWrite number + \" is less than zero.\"\nWrite \"You didn't follow instructions.\"\n\uE041\uE042\uE012\n\nTest plan: A document that specifies how many times and with what data the program must be run in order to thoroughly test it\n\uE041\uE042\uE012\n\nCode coverage: An approach that designs test cases by looking at the code\n\uE041\uE042\uE012\n\nData coverage: An approach that designs test cases by looking at the allowable data values\n\uE041\uE042\uE012\n\nTest plan implementation: Using the test cases outlined in the test plan to verify that the program outputs the predicted results\n\uE041\uE042\uE012\n\nOperations of a Computer: Computer can store, retrieve, and process data\n\uE041\uE042\uE012\n\nMachine Language: A set of instructions the machine's hardware is built to recognize and execute\n\uE041\uE042\uE012\n\nMachine-language Programs: Written by entering a series of these instructions in binary form\n\n\uE041\uE042\uE012\nPep/8 Assembly Language: A language that permits the user to enter mnemonic codes for each instruction rather than binary numbers\n\uE041\uE042\uE012\n\nPseudocode: Shorthand-type language people use to express algorithms\n\uE041\uE042\uE012\n\nTesting Programs: All programs must be tested; code coverage testing and data coverage (black-box testing) two common approaches");
			startActivityForResult(i, result);
			break;
		case 6:  // CH8
			i.putExtra("stringkey","Abstract data type: A container whose properties (data and operations) are specified independently of any particular implementation\n\uE041\uE042\uE012\n\nAdjacent vertices: Two vertices that are connected by an edge\n\n\uE041\uE042\uE012\nArguments: The identifiers listed in parentheses on the sub program call; actual parameters\n\n\uE041\uE042\uE012\nBinary tree: An abstract composite structure with a unique starting node called the root, in which each node is capable of having two child nodes and node and in which a unique path exist from the root to every other node\n\n\uE041\uE042\uE012\nContainers: Object whose role is to hold and manipulate other objects\n\n\uE041\uE042\uE012\nData structure: the implementation of a composite data field in an abstract data type\n\n\uE041\uE042\uE012\nDirected graph (digraph): A graph in which each edge is directed from one vertex to another (or the same) vertex\n\n\uE041\uE042\uE012\nEdge (arc): A pair of vertices representing a connection between two nodes in a graph\n\n\uE041\uE042\uE012\nGraph: A data structure that consists of a set of nodes and a set of edges that relate their nodes to each other\n\n\uE041\uE042\uE012\nLeaf node: A tree node that has two children\n\n\uE041\uE042\uE012\nLinked structure: An implementation of a container where the items are stored together with information on where the next item can be found\n\n\uE041\uE042\uE012\nParameters: The identifiers listed in parentheses beside the sub program name; formal parameters\n\n\uE041\uE042\uE012\nPath: A text designation of the location of a file or subdirectory in a file system\n\n\uE041\uE042\uE012\nReference parameter: A parameter that expects the address of its argument to be passed by the calling unit\n\n\uE041\uE042\uE012\nRoot: The unique starting node in a tree\n\n\uE041\uE042\uE012\nUndirected graph: A graph in which the edges have no direction\n\n\uE041\uE042\uE012\nValue parameter: A parameter that expects a copy of its argument to be passed by the calling unit\n\n\uE041\uE042\uE012\nVertex: A node in a graph");
			startActivityForResult(i, result);
			break;
		case 7:   //  CH9
			i.putExtra("stringkey","Asynchronous:\n1) Not occurring at the same moment in time as some specific operation of the computer\n2) In other words, not synchronized with the program's actions\n\n\uE041\uE042\uE012\nBoolean Expression: A sequence of identifiers, separated by compatible operators, that evaluates to either true or false\n\n\uE041\uE042\uE012\nBytecode: A standard machine language into which Java source code is compiled\n\n\uE041\uE042\uE012\nCase Sensitive:\n1) Uppercase and lowercase letters are not considered the same\n2) Two identifiers with the same spelling but different capitalization are considered to be two distinct identifiers\n\n\uE041\uE042\uE012\nClass (Implementation Phase): A pattern for an object\n\n\uE041\uE042\uE012\nCompiler: A program that translates a high-level language program into machine code\n\n\uE041\uE042\uE012\nControl Structure: An instruction that determines the order in which other instructions in a program are executed\n\n\uE041\uE042\uE012\nData Type: A description of the set of values and the basic set of operations that can be applied to values of the type\n\n\uE041\uE042\uE012\nDeclaration: A statement that associates an identifier with a variable, an action, or some other entity within the language that can be given a name so that the programmer can refer to that item by name\n\n\uE041\uE042\uE012\nEncapsulation:\n1) Bundling data and actions so that the logical properties of data and actions are separated from the implementation details\n2) A language feature that enforces information hiding\n\n\uE041\uE042\uE012\nFields:\n1) Named items in a class\n2) Can be data or subprograms\n\n\uE041\uE042\uE012\nInheritance: A mechanism by which one class acquires the properties-data fields and methods-of another class\n\n\uE041\uE042\uE012\nInstantiate: To create an object from a class\n\n\uE041\uE042\uE012\nInterpreter: A program that inputs a program in a high-level language and directs the computer to perform the actions specified in each statement\n\n\uE041\uE042\uE012\nMethod: A named algorithm that defines one aspect of the \nbehavior of a class\n\n\uE041\uE042\uE012\nObject:\n1) A collection of data values and associated operations\n2) An entity or thing that is relevant in the context of a problem\n\uE041\uE042\uE012\n\nObject (implementation phase): An instance of a class\n\uE041\uE042\uE012\nObject (problem-solving phase): An entity or thing that is relevant in the context of a problem\n\n\uE041\uE042\uE012\nObject class (class): A description of a group of objects with similar properties and behaviors\n\n\uE041\uE042\uE012\nObject class (class) (problem-solving phase): A description of a group of objects with similar properties and behaviors\n\n\uE041\uE042\uE012\nPolymorphism: The ability of a language to have duplicate method names is an inheritance hierarchy and to apply the method that is appropriate for the object to which the method is applied\n\n\uE041\uE042\uE012\nReserved Word:\n1) A word in a language that has special meaning\n2) It cannot be used as an identifier\n\uE041\uE042\uE012\n\nStrong Typing: Each variable is assigned a type, and only values of that type can stored in the variable");
			startActivityForResult(i, result);
			break;
		case 8:   //  CH10
			i.putExtra("stringkey","Address Binding: The mapping from a logical address to a physical address\n\n\uE041\uE042\uE012\nApplication Software: Programs that help us solve real-world problems\n\n\uE041\uE042\uE012\nBase register: A register that holds the beginning address of the current partition\n\n\uE041\uE042\uE012\nBounds register: A register that holds the length of the current partition\n\n\uE041\uE042\uE012\nContext Switch: The exchange of register information that occurs when one process is removed from the CPU and another takes its place.\n\n\uE041\uE042\uE012\nCPU Scheduling: The act of determining which process in memory is given access to the CPU so that it may execute\n\n\uE041\uE042\uE012\nDemand paging: An extension to paged memory management in which pages are brought into memory only when referenced\n\n\uE041\uE042\uE012\nDumb terminal: A monitor and keyboard that allow the user to access the mainframe computer in early timesharing systems\n\n\uE041\uE042\uE012\nDynamic-partition: technique The memory management technique in which memory is divided into partitions as needed to accommodated programs\n\n\uE041\uE042\uE012\nFixed-partition: technique The memory management techinque in which memory is divided into a specific number of partitions into which programs are loaded\n\n\uE041\uE042\uE012\nFrame: A fixed-size portion of main memory that holds a process page\n\n\uE041\uE042\uE012\nLogical Address: A reference to a stored value relative to the program making the reference\n\n\uE041\uE042\uE012\nMainframe: A large, multiuser computer often associated with early timesharing systems\n\n\uE041\uE042\uE012\nMemory management: The act of keeping track of how and where programs are loaded in main memory\n\n\uE041\uE042\uE012\nMultiprogramming: The technique of keeping multiple programs in main memory at the same time, competing for the CPU\n\n\uE041\uE042\uE012\nNonpreemptive scheduling: CPU scheduling that occurs when the currently executing process gives up the CPU voluntarily\n\n\uE041\uE042\uE012\nOperating System: System software that manages computer resources and provides an interface for system interaction\n\n\uE041\uE042\uE012\nPage: A fixed-size portion of a process that is stored into a memory frame\n\n\uE041\uE042\uE012\nPage-map table (PMT): The table used by the operating system to keep track of page/frame relationships\n\n\uE041\uE042\uE012\nPage Swap: Bringing in one page from secondary memory, possibly causing another to be removed.\n\n\uE041\uE042\uE012\nPaged memory: technique A memory management technique in which processes are divided into fixed-size pages and stored in memory frames when loaded\n\n\uE041\uE042\uE012\nPhysical Address: An actual address in the main memory device\n\n\uE041\uE042\uE012\nPreemptive scheduling: CPU scheduling that occurs when the operating system decides to favor another process, preempting the currently executing process.\n\n\uE041\uE042\uE012\nProcess: The dynamic representation of a program during \nexecution\n\n\uE041\uE042\uE012\nProcess Control block (PCB): The data structure used by the operating system to manage information about a process\n\n\uE041\uE042\uE012\nProcess management: The act of keeping track of information for active processes\n\n\uE041\uE042\uE012\nProcess states: The conceptual stages through which a process moves as it is managed by the operating system\n\n\uE041\uE042\uE012\nReal-time system: A system in which response time is crucial given the nature of the application domain\n\n\uE041\uE042\uE012\nResponse time: The time delay between receiving a stimulus and producing a response\n\n\uE041\uE042\uE012\nSingle continuous: memory management The approach to memory management in which a program is loaded into one continuous area of memory\n\n\uE041\uE042\uE012\nSystem software: Programs that manage a computer system and interact with hardware\n\n\uE041\uE042\uE012\nThrashing: Inefficient processing caused by constant page swapping\n\n\uE041\uE042\uE012\nTime slice: The amount of time given to each process in the round-robin CPU scheduling algorithm\n\n\uE041\uE042\uE012\nTimesharing: A system in which CPU time is shared among multiple interactive users at the same time\n\n\uE041\uE042\uE012\nTurnaround Time: The CPU scheduling metric that measures the elapsed time between a process's arrival in the ready state and its ultimate completion\n\n\uE041\uE042\uE012\nVirtual machine: The illusion created by a timesharing system that each user has a dedicated machine\n\uE041\uE042\uE012\n\nVirtual memory: The illusion that there is no restriction on a program size because an entire process need not be in memory at the same time");
			startActivityForResult(i, result);
			break;
		case 9:   //  CH13
			i.putExtra("stringkey","Artificial intelligence\n(AI): The study of\ncomputer systems that\nmodel and apply the\nintelligence of the human\nmind\n\n\uE041\uE042\uE012\nTuring test: A behavioral\napproach to determining\nif a computer\nsystem is intelligent\n\n\uE041\uE042\uE012\nWeak equivalence: The\nequality of two systems\nbased on their results\n\n\uE041\uE042\uE012\nStrong equivalence: The equality of two\nsystems based on their\nresults and the process\nby which they arrive at\nthose results\n\n\uE041\uE042\uE012\nLoebner prize: The first\nformal instantiation of\nthe Turing test, held\nannually\n\n\uE041\uE042\uE012\nSemantic network: A\nknowledge representation\ntechnique that represents\nthe relationships\namong objects\n\n\uE041\uE042\uE012\nSearch tree: A structure\nthat represents alternatives\nin adversarial\nsituations, such as game\nplaying\n\uE041\uE042\uE012\n\nDepth-first approach: Searching down the\npaths of a tree prior to\nsearching across levels\n\uE041\uE042\uE012\n\nBreadth-first approach: Searching across levels\nof a tree prior to\nsearching down specific\npaths\n\n\uE041\uE042\uE012\nKnowledge-based:\nsystem Software that\nuses a specific set of\ninformation\n\uE041\uE042\uE012\n\nExpert system: A software\nsystem based on\nthe knowledge of human\nexperts\n\uE041\uE042\uE012\n\nRule-based system: A software system based\non a set of if-then rules\n\uE041\uE042\uE012\n\nInference engine: The software that processes\nrules to draw conclusions\n\n\uE041\uE042\uE012\nArtificial neural network: A computer\nrepresentation of knowledge\nthat attempts to mimic the neural\nnetworks of the human body\n\n\uE041\uE042\uE012\nTraining: The process of\nadjusting the weights\nand threshold values in a\nneural net to get a\ndesired outcome\n\n\uE041\uE042\uE012\nVoice recognition: Using a computer to\nrecognize the words\nspoken by a human\n\n\uE041\uE042\uE012\nNatural language comprehension: Using\na computer to apply a\nmeaningful interpretation\nto human communication\n\n\uE041\uE042\uE012\nVoice synthesis: Using\na computer to create the\nsound of human speech\n\n\uE041\uE042\uE012\nNatural language: Languages that human\nbeings use to communicate,\nsuch as English\n\n\uE041\uE042\uE012\nPhonemes: The set of\nfundamental sounds\nmade in any given\nnatural language\n\n\uE041\uE042\uE012\nVoiceprint The plot of\nfrequency changes over\ntime representing the\nsound of human speech\n\uE041\uE042\uE012\n\nLexical ambiguity: The ambiguity created when words have multiple\nmeanings\n\uE041\uE042\uE012\n\nSyntactic ambiguity: The ambiguity created when sentences can be\nconstructed in various\nways\n\n\uE041\uE042\uE012\nReferential ambiguity: The ambiguity created\nwhen pronouns could be\napplied to multiple\nobjects\n\n\uE041\uE042\uE012\nChatbot: A program designed to carry on a conversation with a human user\n\n\uE041\uE042\uE012\nRobot: A ______ is made up of sensors, actuators, and computational elements( (microprocessors).");
			startActivityForResult(i, result);
			break;
		case 10:   //  CH14
			i.putExtra("stringkey","Computational biology: An interdisciplinary field that applies technique of computer science, applied mathematics, and statistics to problems in biology\n\uE041\uE042\uE012\n\nSimulation Developing: a model of a complex system and experimenting with the model to observe the results\n\n\uE041\uE042\uE012\nModel: An abstraction of a real system; a representation of objects within a system and the rules that govern the behavior of the objects\n\n\uE041\uE042\uE012\nBioinformatics: The application of information technology to molecular biology. It involves the acquisition, storage, manipulation, analyses, visualization, and sharing of biological information on computers and computer networks.\n\n\uE041\uE042\uE012\nComputational biomodeling: the building of computational models of biological systems\n\n\uE041\uE042\uE012\nComputational genomics: the deciphering of genome sequences.\n\n\uE041\uE042\uE012\nMolecular modeling: The modeling of molecules\n\n\uE041\uE042\uE012\nProtein: structure prediction The attempt to produce models of three-dimensional protein structures that have yet to be found experimentally\n\n\uE041\uE042\uE012\nComputer Gaming: A computer simulation of a virtual world\n\n\uE041\uE042\uE012\nGame play: The type of interactions and experiences a player has during the game\n\n\uE041\uE042\uE012\nGame Engine: A software system within which computer games are created");
			startActivityForResult(i, result);
			break;
		case 11:   //  CH15
			i.putExtra("stringkey","Computer network: A collection of computing\ndevices connected so\nthat they can communicate\nand share resources\n\uE041\uE042\uE012\n\nWireless: A network\nconnection made without\nphysical wires\n\uE041\uE042\uE012\n\nNode (or Host): Any\naddressable device\nattached to a network\n\uE041\uE042\uE012\n\nData transfer rate (also\nbandwidth): The speed\nwith which data is\nmoved from one place to\nanother on a network\n\uE041\uE042\uE012\n\nProtocol: A set of rules\nthat defines how data is\nformatted and processed\non a network\n\n\uE041\uE042\uE012\nClient/server model: A distributed approach\nin which a client makes\nrequests of a server and\n\uE041\uE042\uE012\n\nFile server: A computer\ndedicated to storing and\nmanaging files for\nnetwork users\n\uE041\uE042\uE012\n\nWeb server: A computer dedicated to\nresponding to requests\nfor Web pages\n\uE041\uE042\uE012\n\nLocal-area network(LAN): A network\nconnecting a small number of nodes in a\nclose geographic area\n\uE041\uE042\uE012\n\nRing topology: A LAN configuration in which\nall nodes are connected in a closed loop\n\uE041\uE042\uE012\n\nStar topology: A LAN configuration in which a\ncentral node controls all message traffic\n\uE041\uE042\uE012\n\nBus topology: A LAN configuration in which\nall nodes share a common line\n\uE041\uE042\uE012\n\nEthernet: The industry standard for local-area\nnetworks, based on a bus topology\n\uE041\uE042\uE012\n\nWide-area network (WAN): A network\nconnecting two or more\nlocal-area networks\n\uE041\uE042\uE012 \n\nGateway: A node that handles communication\nbetween its LAN and other networks\n\uE041\uE042\uE012\n\nInternet: A wide-area network that spans the\nplanet\n\uE041\uE042\uE012\n\nMetropolitan-area network (MAN): A\nnetwork infrastructure developed for a large\ncity\n\uE041\uE042\uE012\n\nInternet backbone: A set of high-speed\nnetworks carrying Internet traffic\n\uE041\uE042\uE012\n\nInternet service provider (ISP): A company providing\naccess to the Internet\n\n \uE041\uE042\uE012\nPhone modem: A device that converts\ncomputer data into an\nanalog audio signal and\nback again\n\uE041\uE042\uE012\n\nDigital subscriber line (DSL): An Internet\nconnection made using a\ndigital signal on regular\nphone lines\n\uE041\uE042\uE012\n\nCable modem: A\ndevice that allows computer network\ncommunication using the\ncable TV hookup in a home\n\uE041\uE042\uE012\n\nBroadband Network: technologies that generally\nprovide data transfer speeds greater than 128bps\n\uE041\uE042\uE012\n\nDownload: Receiving data on your home\ncomputer from the Internet\n\uE041\uE042\uE012\n\nUpload: Sending data from your home\ncomputer to a destination on the Internet\n\uE041\uE042\uE012\n\nPacket: A unit of data sent across a network\n\uE041\uE042\uE012\n\nPacket switching: The approach to network\ncommunication in which packets are individually\nrouted to their destination, then reassembled\n\uE041\uE042\uE012\n\nRouter: A network device that directs a\npacket between networks toward its final destination\n\uE041\uE042\uE012\n\nRepeater: A network device that strengthens\nand propagates a signal along a long communication line\n\uE041\uE042\uE012\n\nProprietary system: A system that uses technologies\nkept private by a particular commercial vendor\n\uE041\uE042\uE012\n\nInteroperability: The ability of software and\nhardware on multiple machines and from\nmultiple commercial vendors to communicate\n\uE041\uE042\uE012\n\nOpen system: A system that is based on a\ncommon model of network architecture and\nan accompanying suite of protocols\n\uE041\uE042\uE012\n\nOpen Systems Interconnection Reference:\nA seven-layer logical breakdown of\nnetwork interaction to\nfacilitate communication\nstandards\n\uE041\uE042\uE012\n\nProtocol: stack Layers of protocols that build\nand rely on each other\n\uE041\uE042\uE012\n\nTransmission Control Protocol (TCP): The\nnetwork protocol that breaks messages into\npackets, reassembles them at the destination,\nand takes care of errors \n\n\uE041\uE042\uE012\nInternet Protocol (IP): The network protocol\nthat deals with the routing of packets\nthrough interconnected networks to the final\ndestination\n\n\uE041\uE042\uE012\nTCP/IP: A suite of protocols and programs\nthat support low-level network communication\n\uE041\uE042\uE012\n\nUser Datagram Protocol (UDP): An alternative to TCP that\nachieves higher transmission speeds at the\ncost of reliability\n\uE041\uE042\uE012\n\nPing: A program used to test whether a particular\nnetwork computer is active and reachable\n\uE041\uE042\uE012\n\nTraceroute: A program that shows the route a\npacket takes across the Internet\n\uE041\uE042\uE012\n\nPort: A numeric designation corresponding to\na particular high-level protocol\n\uE041\uE042\uE012\n\nMIME: type A standard for defining the format of\nfiles that are included as e-mail attachments or on\nWeb sites\n\n\uE041\uE042\uE012\nFirewall: A gateway machine and its software\nthat protects a network by filtering the traffic it\nallows \n\n\uE041\uE042\uE012\nAccess control policy: A set of rules established\nby an organization that specify what types of\nnetwork communication are permitted and denied");
			startActivityForResult(i, result);
			break;
		case 12:   //  CH16
			i.putExtra("stringkey","World Wide Web (or Web): An infrastructure\nof information and the network software used to\naccess it\n\uE041\uE042\uE012\n\nWeb page: A document that contains or references\nvarious kinds of data\n\uE041\uE042\uE012\n\nLink: A connection between one Web page\nand another\n\n\uE041\uE042\uE012\nWebsite: A collection of related Web pages,\nusually designed and controlled by the same\nperson or company\n\uE041\uE042\uE012\n\nWeb browser: A software tool that retrieves\nand displays Web pages\n\uE041\uE042\uE012\n\nWeb server: A computer set up to\nrespond to requests for Web pages\n\uE041\uE042\uE012\n\nUniform Resource Locator (or URL): A\nstandard way of specifying the location of a\nWeb page\n\uE041\uE042\uE012\n\nHypertext Markup Language (or HTML): The language used to\ncreate or build a Web page\n\uE041\uE042\uE012\n\nMarkup language: A language that uses tags\nto annotate the information in a document\n\uE041\uE042\uE012\n\nTag: The syntactic element in a markup\nlanguage that indicates how information should\nbe displayed\n\uE041\uE042\uE012\n\nAttribute: Part of a tag that provides additional\ninformation about the element\n\uE041\uE042\uE012\n\nJava applet: A Java program designed to be\nembedded into an HTML document, transferred\nover the Web, and executed in a browser\n\uE041\uE042\uE012\n\nJSP scriptlet: A portion of code\nembedded in an HTML document designed to\ndynamically contribute to the content of the Web\npage\n\uE041\uE042\uE012\n\nExtensible Markup Language (or XML): A language that allows the\nuser to describe the content of a document\n\uE041\uE042\uE012\n\nMetalanguage: A language that is used to\ndefine other languages \n\n\uE041\uE042\uE012\nDocument Type Definition (or DTD): A specification\nof the organization of an XML document\n\uE041\uE042\uE012\n\nExtensible Stylesheet Language (or XSL): A\nlanguage for defining transformations from\nXML documents to other output formats");
			startActivityForResult(i, result);
			break;
		case 13:   //  CH17
			i.putExtra("stringkey","Antivirus software: Software designed to detect, remove, and/or prevent malicious software\n\uE041\uE042\uE012\n\nInformation security: The techniques and policies used to ensure proper access to data\n\uE041\uE042\uE012\n\nConfidentiality: Ensuring that data is protected from unauthorized access\n\uE041\uE042\uE012\n\nAvaliablity: The degree to which authorized users can access information for legitimate purposes\n\uE041\uE042\uE012\n\nIntegrity: Ensuring that data can be modified only by appropriate mechanisms\n\uE041\uE042\uE012\n\nRisk Analysis: Determining the nature and likelihood of the risks to key data\n\n\uE041\uE042\uE012\nUser authentication: The process of vertifying the credentials of a particular user of a computer or software system\n\n\uE041\uE042\uE012\nAuthentication credentials: Information users provide to identify themselves for computer access\n\n\uE041\uE042\uE012\nSmart card: A card with an embedded memory chip used to \nidentify users and control access\n\n\uE041\uE042\uE012\nBiometrics: Using physiological characteristics, such as fingerprints, to identify users and control access\n\n\uE041\uE042\uE012\nPassword criteria: A set of rules that must be followed when creating a password\n\n\uE041\uE042\uE012\nPassword management software: A program that helps you manage sensitive data, such as passwords, in a secure manner\n\n\uE041\uE042\uE012\nCAPTCHA: A software mechanism used to verify that a web form is submitted by a human and not an automated prgram\n\n\uE041\uE042\uE012\nTrojan horse: A malicious program disguised as a benevolent resource\n\n\uE041\uE042\uE012\nLogic bomb: A malicious program that is set up to execute when a specific system event occurs\n\n\uE041\uE042\uE012\nPassword guessing: An attempt to gain access to a computer system by methodically trying to determine a user's password.\n\n\uE041\uE042\uE012\nPhishing: Using a web page to masquerade as part of a trusted system to trick users into revealing security information\n\n\uE041\uE042\uE012\nSpoofing: An attack on a computer system in which a malicious user masquerades as an authorized user.\n\n\uE041\uE042\uE012\nBack door: A program feature that gives special and unauthorized access to a software system to anyone who knows \nit exist\n\n\uE041\uE042\uE012\nBuffer overflow: A defect an a computer program that could cause a system to crash and leave the user with heightened \nprivileges\n\n\uE041\uE042\uE012\nDenial-of-service: An attack on a network resource that prevents authorized user from accessing the system\n\n\uE041\uE042\uE012\nMan-in-the-middle: A security attack in which network communication is intercepted in an attempt to obtain key data\n\n\uE041\uE042\uE012\nCryptography: The field of study related to encoded information\n\uE041\uE042\uE012\n\nEncryption: The process of converting plaintext into ciphertext\n\uE041\uE042\uE012\n\nDecryption: The process of converting ciphertext into plaintext\n\uE041\uE042\uE012\n\nCipher: An algorithm used to encrypt and decrypt text\n\uE041\uE042\uE012\n\nSubstitution cipher: A cipher that substitutes one character with another\n\n\uE041\uE042\uE012\nCaesar cipher: A substitution cipher that shifts characters a certain number of positions in the alphabet\n\n\uE041\uE042\uE012\nTransposition cipher: A cipher that rearranges the order of existing characters in a message\n\n\uE041\uE042\uE012\nRoute cipher: A transposition cipher that lays out a message in a grid and traverses it in a particular way\n\n\uE041\uE042\uE012\nCryptanalysis: The process of decrypting a message without knowing the cipher or the key used to encrypt it\n\n\uE041\uE042\uE012\nPublic-key: cryptography An approach to cryptography in which each user has two related keys, one public and one private\n\n\uE041\uE042\uE012\nDigital signature: Data that is appended to a message, made from the message itself and the sender's private key, to ensure the authenticity of the message\n\n\uE041\uE042\uE012\nDigital certificate: A representation of a sender's authenticated public key used to minimize malicious forgeries\n\n\uE041\uE042\uE012\nSecurity policy: A written document describing the constraints or behavior an organization embraces regarding the information provided by its users\n\n\uE041\uE042\uE012\nGPS (Global Positioning System): A system that uses satellites to pinpoint the location of any GPS reciever\n\n\uE041\uE042\uE012\nWiki: A website whose content can be created an edited by multiple users\n\n\uE041\uE042\uE012\nFingerprint analysis: A technique used for user authentication that compares a scanned fingerprint to a stored copy of the authorized user's fingerprint\n\n\uE041\uE042\uE012\nMalicious code (malware): A computer program that attempts to bypass appropriate authorization safeguards and/or performs unauthorized functions\n\n\uE041\uE042\uE012\nVirus: A malicious, self-replicating program that embeds itself into other code\n\n\uE041\uE042\uE012\nWorm: A malicious stand-alone program that often targets network resources");
			startActivityForResult(i, result);
			break;
		
		}  
		
	}

	}


